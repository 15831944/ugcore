/*
  created
  Sebastian Reiter <s.b.reiter@googlemail.com>
  y10 m07 d30

  refactored
  Torbj√∂rn Klatt <torbjoern@torbjoern-klatt.de>
  y12 m03 d28
*/

/** \page pageUG4Introduction Introduction

\section secAbout About 

<strong>UG4</strong> has been written and is still developed at the 
<em><a href="http://www.g-csc.de">Goethe Center for Scientific Computing at the 
University of Frankfurt, Germany</a></em>.


<hr>
\section secFeatures Features

- Fast and efficient numerical solvers for serial and parallel environments.

- A flexible discretization module, allowing to freely couple equations, input 
  and output parameters, even on scripting level.

- An efficient extensible grid manager supporting distributed adaptive hybrid
  multigrids in 1, 2 and 3 dimensions. Supported element types are vertices, 
  edges, triangles, quadrilaterals, tetrahedrons, hexahedrons, prisms and 
  pyramids. 

- A parallelization layer based on mpi which allows efficient communication on 
  distrubuted hierarchical graphs. Scalability has been shown for up to 256ki 
  processes - more to come...

- <strong>UG4</strong> extends the lua scripting language, which allows to 
  control the entire simulation from powerful an easily readable scripts.

- Through the <em>Visual Reflection Library</em> users can run and control an 
  entire simulation through a modern graphical interface.

- <strong>UG4</strong> also features an interactive shell with auto-completion, 
  which can be used in addition to scripts to have even more control over the 
  run of a simulation.

- A Plugin system allows users to extend <strong>UG4</strong> without having to 
  dive into the specifics of <strong>UG4</strong>'s implementation.
  Plugins can export functions and classes, which are then immediately available 
  in <strong>UG4</strong>'s script and in the <em>Visual Reflection Library</em>.

- <strong>UG4</strong> is backed up by several powerful tools like 
  <em>ProMesh</em> (meshing software) or the <em>ConnectionViewer</em> (used to 
  inspect matrix connections).

- Simulation results can be stored and interpreted by widely spread 
  visualization toolkits like the <em>VTK</em> based <em>ParaView</em>.

- <strong>UG4</strong> is a cross-platform tool and supports Linux, MacOSX and 
  Microsoft Windows.

*/
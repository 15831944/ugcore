#!/bin/bash
######################################################################
#                           cekon
#-------------------------------------------------------------------
# using SLURM
######################################################################

function UJS_Submit
{
	echo "Cluster: cekon. Scheduler: SLURM."
	if [ $nppn -ne 1 ]; then
		echo "cekon does not support nppn > 1. Aborting."
		exit
	fi

	SlurmMail=""
	if [ $mail == true ]; then 
		if [ -z "$UGSUBMIT_EMAIL" ]; then
			echo "please set UGSUBMIT_EMAIL or specify email with -email. Aborting."
			exit
		fi

		SlurmNotification="never"
		if [ $mailStart == true ]; then
			SlurmNotification="BEGIN"
		fi
		if [ $mailEnd == true ]; then
			if [ $SlurmNotification == "never" ]; then
				SlurmNotification="END"
			else
				SlurmNotification="ALL"
			fi
		fi
		if [ $mailError == true ]; then
			if [ $SlurmNotification == "never" ]; then
				SlurmNotification="FAIL"
			else
				SlurmNotification="ALL"
			fi
		fi	 
		SlurmMail="--mail-user=$UGSUBMIT_EMAIL --mail-type=$SlurmNotification"
	fi

	sallocrun="salloc -n $npe $SlurmMail --job-name=$jobname mpirun $executable $args"

	echo "$sallocrun" >> $outdir/info.txt

	if [ $test == true ]; then
		echo "Only testing - NOT executing."
		cd $outdir/..
		#rm -rf $outdir/
		exit
	fi
	

	if [ $interactive == true ]; then
		echo "Start: $sallocrun"
		$sallocrun | tee $outdir/job.output
		return=$?	
		if [ ! $return == 0 ]; then
			echo "ERROR: salloc returned $return. Job has NOT been started."
			exit
		fi
	else
		echo "Submit: $sallocrun"
		nohup $sallocrun > $outdir/job.output &
		sleep 1
		jobid=`cat job.output | sed -n 1p | sed 's/salloc: Granted job allocation \([0-9]*\).*/\1/'`
	fi
}


function UJS_GetOptions
{
	nppnmax=1
	pemax=92	
}

function UJS_Info
{
	echo "Using SLURM on cekon"
	echo "squeue -u $USER"
	squeue -u $USER	
}

function UJS_Cancel
{
	echo "Using SLURM on cekon"
	scancel $1
}
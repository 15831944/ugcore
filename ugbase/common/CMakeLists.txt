cmake_minimum_required(VERSION 2.6)

################################################
# common
################################################

project(P_COMMON)

include("../../ug_cmake_includes.txt")

set(srcCommon	log.cpp
				serialization.cpp
				allocators/small_object_allocator.cpp
				util/binary_buffer.cpp
				util/binary_stream.cpp
        util/file_util.cpp
        util/loader/loader_util.cpp
				util/loader/loader_obj.cpp
				util/message_hub.cpp
				util/ostream_util.cpp
				util/parameter_parsing.cpp
        util/string_util.cpp
				util/variant.cpp
				math/math_vector_matrix/math_matrix.cpp
				math/math_vector_matrix/math_vector.cpp
				math/misc/tri_box.cpp
				math/misc/tritri.cpp
				math/misc/lineintersect_utils.cpp
				math/misc/eigenvalues.cpp
				math/misc/math_util.cpp)

set(sources ${srcCommon})


if(UG_PROFILER)
	set(srcProfiler	profiler/profiler.cpp
					profiler/src/ShinyManager.cpp
					profiler/src/ShinyNode.cpp
					profiler/src/ShinyNodePool.cpp
					profiler/src/ShinyOutput.cpp
					profiler/src/ShinyTools.cpp)	
	set(sources ${sources} ${srcProfiler})
endif(UG_PROFILER)

# add support for UGProfileNode any case
set(sources ${sources} profiler/profile_node.cpp)

################################################################################
# Platform dependend code
################################################################################
if(UNIX)
	set(sources ${sources}	os_dependent/file_util_posix.cpp)
	
	if(buildPluginSystem)
		set(sources ${sources}	os_dependent/plugin_util_unix.cpp)
	endif(buildPluginSystem)
	
	if(APPLE)
		set(sources ${sources} os_dependent/os_info_osx.cpp)
	else(APPLE)
		set(sources ${sources} os_dependent/os_info_linux.cpp)
	endif(APPLE)

elseif(WIN32)
	set(sources ${sources}	os_dependent/os_info_win.cpp)
	
	if(buildPluginSystem)
		set(sources ${sources}	os_dependent/plugin_util_win.cpp)
	endif(buildPluginSystem)
	
	if(MINGW)
		set(sources ${sources} os_dependent/file_util_posix.cpp)
	else(MINGW)
		set(sources ${sources} os_dependent/file_util_win.cpp)
	endif(MINGW)
	
else(UNIX)
	message(STATUS "YOUR OS IS NOT FULLY SUPPORTED. Methods in common/os_dependent won't be available!")
endif(UNIX)


################################################################################
# node_tree
################################################################################
add_subdirectory(node_tree)


################################################################################
#	add sources to library
################################################################################
if(BUILD_ONE_LIB)
	EXPORTSOURCES(ugbase/common ${sources})
else(BUILD_ONE_LIB)
	add_library(common ${sources})
endif(BUILD_ONE_LIB)

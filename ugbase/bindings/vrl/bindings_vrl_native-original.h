/*
 * Copyright (c) 2013:  G-CSC, Goethe University Frankfurt
 * Author: Christian Poliwoda
 * 
 * This file is part of UG4.
 * 
 * UG4 is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License version 3 (as published by the
 * Free Software Foundation) with the following additional attribution
 * requirements (according to LGPL/GPL v3 §7):
 * 
 * (1) The following notice must be displayed in the Appropriate Legal Notices
 * of covered and combined works: "Based on UG4 (www.ug4.org/license)".
 * 
 * (2) The following notice must be displayed at a prominent place in the
 * terminal output of covered works: "Based on UG4 (www.ug4.org/license)".
 * 
 * (3) The following bibliography is recommended for citation and must be
 * preserved in all covered files:
 * "Reiter, S., Vogel, A., Heppner, I., Rupp, M., and Wittum, G. A massively
 *   parallel geometric multigrid solver on hierarchically distributed grids.
 *   Computing and visualization in science 16, 4 (2013), 151-164"
 * "Vogel, A., Reiter, S., Rupp, M., Nägel, A., and Wittum, G. UG4 -- a novel
 *   flexible software system for simulating pde based models on high performance
 *   computers. Computing and visualization in science 16, 4 (2013), 165-179"
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_gcsc_vrl_ug_UG */

#ifndef _Included_edu_gcsc_vrl_ug_UG
#define _Included_edu_gcsc_vrl_ug_UG
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _convertRegistryInfo
 * Signature: ()Ledu/gcsc/vrl/ug/NativeAPIInfo;
 */
JNIEXPORT jobject JNICALL Java_edu_gcsc_vrl_ug_UG__1convertRegistryInfo
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _invokeMethod
 * Signature: (Ljava/lang/String;JZLjava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_edu_gcsc_vrl_ug_UG__1invokeMethod
  (JNIEnv *, jobject, jstring, jlong, jboolean, jstring, jobjectArray);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _newInstance
 * Signature: (J[Ljava/lang/Object;)Ledu/gcsc/vrl/ug/Pointer;
 */
JNIEXPORT jobject JNICALL Java_edu_gcsc_vrl_ug_UG__1newInstance
  (JNIEnv *, jobject, jlong, jobjectArray);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getExportedClassPtrByName
 * Signature: (Ljava/lang/String;Z)J
 */
JNIEXPORT jlong JNICALL Java_edu_gcsc_vrl_ug_UG__1getExportedClassPtrByName
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getDefaultClassNameFromGroup
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getDefaultClassNameFromGroup
  (JNIEnv *, jobject, jstring);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _invokeFunction
 * Signature: (Ljava/lang/String;Z[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_edu_gcsc_vrl_ug_UG__1invokeFunction
  (JNIEnv *, jobject, jstring, jboolean, jobjectArray);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getSvnRevision
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getSvnRevision
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getUGVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getUGVersion
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getDescription
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getDescription
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getAuthors
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getAuthors
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getBinaryLicense
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getBinaryLicense
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _getCompileDate
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_edu_gcsc_vrl_ug_UG__1getCompileDate
  (JNIEnv *, jobject);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _ugInit
 * Signature: ([Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_edu_gcsc_vrl_ug_UG__1ugInit
  (JNIEnv *, jclass, jobjectArray);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _delete
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_edu_gcsc_vrl_ug_UG__1delete
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     edu_gcsc_vrl_ug_UG
 * Method:    _invalidate
 * Signature: (Ledu/gcsc/vrl/ug/SmartPointer;)V
 */
JNIEXPORT void JNICALL Java_edu_gcsc_vrl_ug_UG__1invalidate
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class edu_gcsc_vrl_ug_UG_MessageThread */

#ifndef _Included_edu_gcsc_vrl_ug_UG_MessageThread
#define _Included_edu_gcsc_vrl_ug_UG_MessageThread
#ifdef __cplusplus
extern "C" {
#endif
#undef edu_gcsc_vrl_ug_UG_MessageThread_MIN_PRIORITY
#define edu_gcsc_vrl_ug_UG_MessageThread_MIN_PRIORITY 1L
#undef edu_gcsc_vrl_ug_UG_MessageThread_NORM_PRIORITY
#define edu_gcsc_vrl_ug_UG_MessageThread_NORM_PRIORITY 5L
#undef edu_gcsc_vrl_ug_UG_MessageThread_MAX_PRIORITY
#define edu_gcsc_vrl_ug_UG_MessageThread_MAX_PRIORITY 10L
#ifdef __cplusplus
}
#endif
#endif

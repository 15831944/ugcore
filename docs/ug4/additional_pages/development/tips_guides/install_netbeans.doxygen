//	created by Martin Rupp
//	martin.rupp@gcsc.uni-frankfurt.de
//	y12 m10 d18

/** \page pageInstallNetbeans Developing with the Netbeans IDE

The page is an install guide for the usage of Netbeans for ug.
Currently tested with Netbeans 7.2 on MacOS.

- \ref secInstallNetbeansDownload
- \ref secInstallNetbeansCreateProject
- \ref secInstallNetbeansRunningAndDebugging
- \ref secInstallNetbeansLUA

For any questions, contact martin.rupp@gcsc.uni-frankfurt.de .

<hr>
\section secInstallNetbeansDownload Download Netbeans

 You have to checkout ug4 manually or use the version you checked out with Eclipse.
<ul>
  <li>Got to http://netbeans.org/downloads/, download the "All" package, or the "C/C++" package.  </li>
  <li>Open the downloaded file (e.g. netbeans-7.2-ml-macosx.dmg), install.</li>
  <li> Start \em Netbeans. </li>
  <li> Select View -> Show Versioning Labels (for SVN info) </li>
</ul>


<hr>
\section secInstallNetbeansCreateProject Create the ug4 project in Netbeans

<ul>
  <li>In Netbeans's Menu, choose \em File -> \em New Project ...-> <em>C/C++ </em>, <em> C/C++ Project with Existing Sources</em>, click \em Next.  </li>
  <li>As folder, specify your ug4 root (where the CMakeLists.txt is). Select "Custom Make Mode". \em Next.</li>
  <li>
  <ul>
  <li>If you already have a makefile (like when you already used cmake) specify it.</li>
   <li>If not, select "Using the makefile generated by the configure script".<br>
		set configure arguments to -DDIM=2 -DCPU=1  -DDEBUG=ON<br>
		select run configure script in subfolder, and set "build_debug"</li>
  </ul>
  \em Next.
  </li>
  <li>add -j8 to make if you want to compile parallel (and you have enough RAM). \em Next</li>
  <li>Source Files: \em Next</li>
  <li>Code Assistance: \em Next</li>
  <li>Project Name: Choose one. \em finish </li>
</ul>
 ug4 will be built automatically for the first time. You can select Run -> Build Project to build it manually or use the "hammer" symbol.

<hr>
\section secInstallNetbeansCreateOtherConfigurations Create other configurations
 Unfortunately, Netbeans can not create other cmake configurations automatically. So you have to create your folder ug4/release_build yourself and execute cmake there. Then
 <ul>
 <li>In Netbeans menu, select \em Window -> \em Files. Then, right click on your project -> Properies. (also available in \em File -> <em>Project Properties</em>)</li>
 <li> Select \em Build -> \em Make</li>
 <li>Click on "Manage Configurationsâ€¦", Duplicate & rename to e.g. Release</li>
 <li> Set Working Directory to ug4/release_build</li>
</ul>
 
\note Netbeans has a nice code assistance. However, this takes a lot of memory. Go to \em File -> <em>Project Properties</em> -> \em General. There you set <tt>^(nbproject|externals|unit_tests|build_debug|build_release)$</tt> 
 * as ignored folders. If you still have memory problems, consider disabling code assistance by removing "." from Source Folders.
 
\section secInstallNetbeansRunningAndDebugging Running and Debugging
 <ul>
 <li> Go to \em File -> <em>Project Properties</em></li>
 <li>Select "Run"</li>
 <li>enter as run command, for example "./ugshell -ex conv_diff/laplace.lua"
 <li>Run Directory YOURUG4ROOT/bin</li>
 <li>Build First : Set this on or off, as you like.</li>
 <li>Terminal: Set External Terminal here if you want to use the shell interactively (i.e. entering something in the shell)</li>
 </ul>
 For debugging, do the same in Project Properties -> Debug, where Debug command is the same as your run command, and Working Directory is the same as Run Directory.<br>
 To run ug4, select \em Run -> <em>Run Project</em> or the "play" button.<br>
 To debug ug4, select \em Debug -> <em>Debug Project</em>  or the "play" button with 1 square 3 symbols. You can set breakpoints in files by clicking on the line numbers.
\note Be sure you have configured with -DDEBUG=ON and your last build was the debug build when you try to debug.


\section secInstallNetbeansLUA Netbeans and LUA
 You can try luaSupport or luaTopping. If netbeans is stuck, delete netbeans and reinstall with the dmg (settings will be saved).
 */

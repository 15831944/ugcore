//	created by Andreas Vogel
//	andreas.vogel@gcsc.uni-frankfurt.de
//	y10 m12 d11

/** \page pageInstallEclipse Developing with the Eclipse IDE

The page is an install guide for the usage of Eclipse for ug.

- \ref secInstallEclipseDownload
- \ref secInstallEclipseUG4Download 
- \ref secInstallEclipseUseMakefiles
- \ref secInstallEclipseRunExecutable
- \ref secInstallEclipseSyntaxLua
- \ref secInstallEclipseSyntaxDoxygen
- \ref secInstallEclipseAdditional
- \ref secUG4ProjectInEclipse

For any questions, contact andreas.vogel@gcsc.uni-frankfurt.de .

\note If you're working at the G-CSC, there is a preconfigured Eclipse download available. Ask for "software server".

<hr>
\section secInstallEclipseDownload Download Eclipse

<ul>
  <li>Download \em Eclipse from http://www.eclipse.org/downloads/ :
    <em>Eclipse IDE for C/C++ Developers</em>
  </li>
  <li>Unzip \em Eclipse and move it to your "Application" folder</li>
  <li> Start \em Eclipse.
    On startup you are requested to choose a workspace.
    This is the location, where your projects will be placed.
    Specially, \ug4 will be placed here.
    So, choose an folder where you want \ug4 to be downloaded to.
    (e.g. <tt>home/projects/</tt>)
  </li>
  <li>Install a \em Subversion plugin:
    <ol>
      <li><em>Help</em> -> <em>Install new Software</em></li>
      <li>On Eclipse Helios, type <tt>Work with: http://download.eclipse.org/releases/helios</tt></li>
      <li>On Eclipse Juno, type <tt>Work with: http://download.eclipse.org/releases/juno</tt></li>
      <li>Choose the plugin <em>Collaboration</em> by setting checking the box</li>
      <li>Click \em Next </li>
      <li>Click \em Next </li>
      <li>Accept license
      <li>Click \em Finish </li>
      <li>Installation begins.
        Restart \em Eclipse when finished.
      </li>
      <li>Choose latest release of <em>SVN Kit *.*.*</em>.
        Click \em Finish.
      </li>
      <li>Choose all items to be installed.
        Click \em Next.
      </li>
      <li>Click \em Next </li>
      <li>Accept license.
        Click \em Finish.
        Install begins.
        Restart \em Eclipse when finished.
      </li>
    </ol>
  </li>
</ul>


<hr>
\section secInstallEclipseUG4Download Download ug4 via Eclipse/SVN

<ul>
  <li>In Eclipse's Menu, choose \em File -> \em New -> <em>Other ...</em>, and 
    there \em SVN -> <em>Project from SVN</em>
  </li>
  <li>URL is: <tt>svn://fuji.gcsc.uni-frankfurt.de/ug4/trunk</tt></li>
  <li>Choose <em>Use a custom label</em>: <tt>ug4-trunk</tt></li>
  <li>Fill in your \em User and \em Password as received by (currently) 
    Sebastian Reiter.
  </li>
  <li>Disable \em Advanced -> <em>Detect repository structure</em></li>
  <li>Click \em Next (Click always yes when problems occure)</li>
  <li>Choose <em>Head Revision</em></li>
  <li>Click \em Finish </li>
  <li>Choose <em>Check out as a project configured using the the New Project 
    Wizard</em>.
    Click \em Finish.
  </li>
  <li>Choose <em>C/C++</em> -> <em>C++ Project</em>.
    Click \em Next.
  </li>
  <li>Choose <em>Project name</em>: <tt>ug4</tt> and <em>Empty Project</em>.  
    Click \em Finish
  </li>
</ul>

<hr>
\section secInstallEclipseUseMakefiles Build in Eclipse using external Makefiles
<hr>

In order to build the \ug4 libraries via \em Eclipse, you first must create the 
Makefiles.
This is done using \em Cmake in the terminal (go to \ref pageUG4Setup if you did not already install \em CMake).

<ol>
  <li>Open a terminal/shell window</li>
  <li>move into your workspace directory you chose before</li>
  <li><tt>cd ug4</tt></li>
  <li><tt>mkdir build_debug</tt></li>
  <li><tt>cd build_debug</tt></li>
  <li><tt>cmake -DDEBUG=ON ..</tt> --> Makefiles are generated</li>
</ol>

Note, that once the Makefiles have been created, you do not have to rebuild them
at any time.
This step has to be performed only once.
Now, these Makefiles can be used in \em Eclipse:

<ol>
  <li>Click right on folder <tt>ug4</tt> -> Choose \em Properties </li>
  <li>Under <em>C/C++-Build</em>:</li>
  <li>Disable <em>Generate Makefiles automatically</em></li>
  <li>Disable <em>Use default build command</em></li>
  <li>Choose <em>Build directory: ...</em> -> Click <em>Filesystem</em> -> 
    Choose newly created folder <tt>build_debug</tt></li>
  <li>In <em>Behaviour</em>: In <em>Build (incremential build)</em> remove 
    \em all
  </li>
  <li>Disable automatically build:
    In Heading bar: \em Project -> remove <em>Build automatically</em>
  </li>
</ol>

You find the binary in <tt>ug4/bin/</tt> with the name <tt>ugshell</tt>


<hr>
\section secInstallEclipseRunExecutable	Run ug-executable via Eclipse

If you want you can also start the executable from \em Eclipse.
This is especially useful if you like to use the build-in Debugger. 

<ol>
  <li><tt>ug4</tt> -> \em Properties </li>
  <li><em>Run/Debug Settings</em></li>
  <li>Click <em>New ...</em> -> <em>C/C++ Application</em></li>
  <li>Fill in executable: \em Browse -> <tt>ug4/bin/ugshell</tt></li>
  <li>Choose \em Arguments -> <em>Program arguments</em>:
    Fill in: <tt>-ex laplace.lua</tt>
  </li>
</ol>

Of course, if needed, use adapted arguments.


<hr>
\section secInstallEclipsePathSymbols Path and Symbols

\em Eclipse has a powerful Autocompletion-Mechanism, Syntax-Highlighting for 
C++ and many other things.
To make them available, you have to tell Eclipse, where to look for:

<ol>
  <li>Click right on folder \c ug4 -> Choose \em Properties </li>
  <li>Under <em>C/C++-General</em> -> Subfolder <em>Path and Symbols</em></li>
  <li>Under \em Includes click <em>Add ...</em></li>
  <li>Click on <em>Workspace ...</em> and choose the folder \c ugbase </li>
  <li>Check: <em>Add to all languages</em> and <em>Add to all 
    configurations</em>
  </li>
</ol> 

If you use build flags, you must tell \em Eclipse to recognize them.
Specially, if you do not use \c UG_PARALLEL, all Parallel Code will not be 
highlighted but regarded as dead code.
So, add it to the Environment:

<ol>
  <li>Click right on folder \c ug4 -> Choose \em Properties </li>
  <li>Under <em>C/C++-General</em> -> Subfolder <em>Path and Symbols</em></li>
  <li>Under \em Symbols click <em>Add ...</em></li>
  <li>Fill in \c UG_PARALLEL, value: \c ON </li>
  <li>Check: <em>Add to all languages</em> and <em>Add to all 
    configurations</em>
  </li>
</ol> 


<hr>
\section secInstallEclipseSyntaxLua Syntax Highlighting in Lua 

\em Lua is the recommended scripting language in \ug4.
In order to have a more comfortable editing of Lua-Scripts you should install a 
Plugin.
We created an own plugin which provides Syntax Highlighting and code completion for
the ug4 registry functions/classes: Go here <a href="http://gcsc.uni-frankfurt.de/Members/mrupp/ug4-auto-completion/">ugIDE</a> for further details.
<br><br>
Available Plugins:
\note You can only install one plugin at a time.

<ul>
<li> <a href="http://gcsc.uni-frankfurt.de/Members/mrupp/ug4-auto-completion/">ugIDE</a></li>
<li> luaEclipse:<br>
You find a link to the install site under:
http://luaeclipse.luaforge.net/preview/update-site<br>
E.g. on MacOSX use:
http://luaeclipse.luaforge.net/preview/update-site/macosx.carbon/site.xml
<ol>
  <li>Open plugin install panel: \em Help -> <em>Install new Software ...</em></li>
  <li>Insert link above into: <em>Work with: ....</em></li>
  <li>Choose <em>LuaEclipse 1.3.1</em> and click <em>next</em></li>
  <li>Accept license agreement</li>
  <li>Finish and restart</li>
</ol>
</li>
<li>(not recommended) \em LunarEclipse 
(http://lunareclipse.sourceforge.net/update.html)
</li>
</ul>
<hr>
\section secInstallEclipseSyntaxDoxygen Syntax Highlighting for Doxygen

As \em Doxygen is used for generating the documentation for \ug4, it is handy 
having the \em Doxygen commands as <tt>\\brief</tt>, <tt>\\param</tt> or alike 
highlighted correctly.

In \em Eclipse one have to activate that implicitly.
Therefore two actions need to be taken in \em Eclipse:
<ol>
  <li><em>Window</em> -> <em>Preferences</em> -> <em>C / C++</em> -> 
    <em>File Types</em> -> <em>New ...</em> -> <tt>*.doxygen</tt> and
    <em>Type</em> -> <em>C++ Source</em>.
    Confirm with <em>OK</em>.
  </li>
  <li>With right-click on the <tt>ug4</tt> project go to <em>Properties</em>
    and under <em>C / C++ General</em> activate <em>Enable project specific
    settings</em> and choose <em>Doxygen</em> as the <em>Documentation Tool</em>.
  </li>
</ol>

<hr>
\section secInstallEclipseAdditional Additional Tipps & Tricks

 - Line Numbers: Eclipse -> Properties. Subfolder General -> Editors -> Text Editors. Enable "Show line numbers".
 - Switching Tabs: On Mac: Apple+F6. On Windows: Ctrl+F6. Ctrl+PageUp / Ctrl+PageDown: Cycle through tabs without showing a list.
 - search a file in the tabs: Apple+E (Mac)
 - search a symbol (e.g. function) in the current file: Apple+O
 - You can change key mappings under Eclipse -> Properties, General -> Keys. (e.g. next Tab, previous Tab)
 - Other recommended plugins are <a href="http://marketplace.eclipse.org/content/cmake-editor">CMake plugin</a> (install site http://cmakeed.sourceforge.net/eclipse/), 
  <a href="http://texlipse.sourceforge.net/screenshots/">TeXclipse</a> (install site http://texlipse.sourceforge.net).

<hr>
\section secUG4ProjectInEclipse Create an UG4 project from exisiting source in Eclipse
Sometimes you already have checked out the source and just want to add ug4 as a project into Eclipse.
This can be the case if you did svn manually or want to use Eclipse to remotely edit files that
you access via \ref secSSHFS or via other file networks.

<ul>
  <li>In Eclipse's Menu, choose \em File -> \em New -> <em> C++ Project</em>
  </li>
  <li>Uncheck "Use default location"  </li>
  <li>Use "Browse" to select the root directory of your ug4.</li>
  <li>Enter a name for that project. This can be different from the name of your ug4 directory and
  has to be different from all other projects in eclipse, so you could also choose something like "ug4onHermit". </li>
</ul>

Note that this will create two new files in your ug4 directory: .cproject and .project.
If you want to use this project in another eclipse (like another version or on another computer),
you have to use \em File -> \em Import -> <em> Existing Projects into Workspace </em>.


 

 * 
*/
// other stuff: http://stackoverflow.com/questions/2707986/eclipse-encoding-macroman-utf8
// texclipse: http://texlipse.sourceforge.net/manual/installation.html
/** \page pageUG4OnWindows Windows Installation

\ug4 supports Windows through the \em MinGW gcc-compilers.
\em MinGW can be downloaded together with \em MSYS at 
http://www.mingw.org/wiki/MSYS .
\em MSYS is a 'minimal shell', which mimics some of the features of unix shells.
You should install \em MSYS and \em MinGW to a rather simple path which does 
not contain spaces or special characters (e.g. <tt>C:\MinGW</tt>).

Compilation of \ug4 furthermore requires the installation of \em CMake, which 
can be obtained from here http://www.cmake.org/cmake/resources/software.html
(min Release 2.6).

You should be able to run \em CMake from your \em MSYS shell (simply type 
\c cmake and press enter).
If \c cmake can't be found, then you should add the path to the \em CMake binary 
to your systems \c PATH variable.

In order to checkout \ug4 from its svn repository you'll either have to follow 
the instructions on how to setup \em Eclipse with svn capabilities
or you'll have to install <em>Tortoise SVN</em> (http://tortoisesvn.net/),
depending on whether you want to develop with \ug4 or just compile it.
<em>Tortoise SVN</em> is an extension to the Windows Explorer and
allows to perform checkouts and commits through the right-click-menu directly
in the explorer.

If you're using <em>Tortoise SVN</em>, then open the explorer and navigate to 
the folder in which you want to install \ug4.
Create a new folder called \c ug4, perform a right click on it and choose 
<em>svn checkout</em> from the menu.
Enter the repository adress (e.g. 
<tt>svn://fuji.gcsc.uni-frankfurt.de/ug4/trunk</tt>), your username and 
password.

You should now have received a full checkout of \ug4's sources.
Now open the \em MSYS shell and navigate to the \ug4 folder you just created.
Note that folders in \em MSYS are specified in a unix way, e.g. <tt>cd 
/c/ug4</tt>)

If you chose \em Eclipse, then please follow the tutorial given in 
\ref pageInstallEclipse to set up \em Eclipse and how to checkout \ug4.

Compilation and \em CMake calls are very similar to unix and to the description 
given in \ref pageUG4OnLinux.
However one important thing to note is, that one has to explicitly specifiy the 
compiler, which shall be used by \em CMake.
A call to \em CMake thus should start as follows:
\verbatim
cmake -G"MSYS Makefiles"
\endverbatim
This is however only necessary when you invoke \em CMake the first time for a 
given folder.

*/
